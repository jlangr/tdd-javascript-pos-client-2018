// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomerExperience renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CustomerExperience />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Welcome, Shopper!
</h3>,
        <h4>
          Items
</h4>,
        <Table
          bodyStyle={Object {}}
          columns={
                    Array [
                              Object {
                                "dataIndex": "description",
                                "key": "description",
                                "title": "Description",
                                "width": 200,
                              },
                              Object {
                                "dataIndex": "price",
                                "key": "price",
                                "title": "Price",
                                "width": 100,
                              },
                              Object {
                                "dataIndex": "",
                                "key": "operations",
                                "render": [Function],
                                "title": "Operations",
                              },
                            ]
          }
          data={Array []}
          emptyText={[Function]}
          id="table-items"
          onHeaderRow={[Function]}
          onRow={[Function]}
          prefixCls="rc-table"
          rowClassName={[Function]}
          rowKey="id"
          rowRef={[Function]}
          scroll={Object {}}
          showHeader={true}
          style={Object {}}
          useFixedHeader={false}
/>,
        <hr />,
        <Form
          bsClass="form"
          componentClass="form"
          horizontal={false}
          inline={false}
>
          <FormGroup
                    bsClass="form-group"
          >
                    <Button
                              active={false}
                              block={false}
                              bsClass="btn"
                              bsStyle="default"
                              className="btn-add"
                              disabled={false}
                              onClick={[Function]}
                    >
                              Add Item
                    </Button>
                    <ControlLabel
                              bsClass="control-label"
                              srOnly={false}
                    >
                              Scan code
                    </ControlLabel>
                    <FormControl
                              bsClass="form-control"
                              className="input-scan-code"
                              componentClass="input"
                              onChange={[Function]}
                    />
          </FormGroup>
</Form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Welcome, Shopper!",
        },
        "ref": null,
        "rendered": "Welcome, Shopper!",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Items",
        },
        "ref": null,
        "rendered": "Items",
        "type": "h4",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bodyStyle": Object {},
          "columns": Array [
            Object {
              "dataIndex": "description",
              "key": "description",
              "title": "Description",
              "width": 200,
            },
            Object {
              "dataIndex": "price",
              "key": "price",
              "title": "Price",
              "width": 100,
            },
            Object {
              "dataIndex": "",
              "key": "operations",
              "render": [Function],
              "title": "Operations",
            },
          ],
          "data": Array [],
          "emptyText": [Function],
          "id": "table-items",
          "onHeaderRow": [Function],
          "onRow": [Function],
          "prefixCls": "rc-table",
          "rowClassName": [Function],
          "rowKey": "id",
          "rowRef": [Function],
          "scroll": Object {},
          "showHeader": true,
          "style": Object {},
          "useFixedHeader": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "form",
          "children": <FormGroup
            bsClass="form-group"
>
            <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="btn-add"
                        disabled={false}
                        onClick={[Function]}
            >
                        Add Item
            </Button>
            <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
            >
                        Scan code
            </ControlLabel>
            <FormControl
                        bsClass="form-control"
                        className="input-scan-code"
                        componentClass="input"
                        onChange={[Function]}
            />
</FormGroup>,
          "componentClass": "form",
          "horizontal": false,
          "inline": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-group",
            "children": Array [
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="btn-add"
                disabled={false}
                onClick={[Function]}
>
                Add Item
</Button>,
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
>
                Scan code
</ControlLabel>,
              <FormControl
                bsClass="form-control"
                className="input-scan-code"
                componentClass="input"
                onChange={[Function]}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsStyle": "default",
                "children": "Add Item",
                "className": "btn-add",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Add Item",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "control-label",
                "children": "Scan code",
                "srOnly": false,
              },
              "ref": null,
              "rendered": "Scan code",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form-control",
                "className": "input-scan-code",
                "componentClass": "input",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Welcome, Shopper!
</h3>,
          <h4>
            Items
</h4>,
          <Table
            bodyStyle={Object {}}
            columns={
                        Array [
                                    Object {
                                      "dataIndex": "description",
                                      "key": "description",
                                      "title": "Description",
                                      "width": 200,
                                    },
                                    Object {
                                      "dataIndex": "price",
                                      "key": "price",
                                      "title": "Price",
                                      "width": 100,
                                    },
                                    Object {
                                      "dataIndex": "",
                                      "key": "operations",
                                      "render": [Function],
                                      "title": "Operations",
                                    },
                                  ]
            }
            data={Array []}
            emptyText={[Function]}
            id="table-items"
            onHeaderRow={[Function]}
            onRow={[Function]}
            prefixCls="rc-table"
            rowClassName={[Function]}
            rowKey="id"
            rowRef={[Function]}
            scroll={Object {}}
            showHeader={true}
            style={Object {}}
            useFixedHeader={false}
/>,
          <hr />,
          <Form
            bsClass="form"
            componentClass="form"
            horizontal={false}
            inline={false}
>
            <FormGroup
                        bsClass="form-group"
            >
                        <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="default"
                                    className="btn-add"
                                    disabled={false}
                                    onClick={[Function]}
                        >
                                    Add Item
                        </Button>
                        <ControlLabel
                                    bsClass="control-label"
                                    srOnly={false}
                        >
                                    Scan code
                        </ControlLabel>
                        <FormControl
                                    bsClass="form-control"
                                    className="input-scan-code"
                                    componentClass="input"
                                    onChange={[Function]}
                        />
            </FormGroup>
</Form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Welcome, Shopper!",
          },
          "ref": null,
          "rendered": "Welcome, Shopper!",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Items",
          },
          "ref": null,
          "rendered": "Items",
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bodyStyle": Object {},
            "columns": Array [
              Object {
                "dataIndex": "description",
                "key": "description",
                "title": "Description",
                "width": 200,
              },
              Object {
                "dataIndex": "price",
                "key": "price",
                "title": "Price",
                "width": 100,
              },
              Object {
                "dataIndex": "",
                "key": "operations",
                "render": [Function],
                "title": "Operations",
              },
            ],
            "data": Array [],
            "emptyText": [Function],
            "id": "table-items",
            "onHeaderRow": [Function],
            "onRow": [Function],
            "prefixCls": "rc-table",
            "rowClassName": [Function],
            "rowKey": "id",
            "rowRef": [Function],
            "scroll": Object {},
            "showHeader": true,
            "style": Object {},
            "useFixedHeader": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form",
            "children": <FormGroup
              bsClass="form-group"
>
              <Button
                            active={false}
                            block={false}
                            bsClass="btn"
                            bsStyle="default"
                            className="btn-add"
                            disabled={false}
                            onClick={[Function]}
              >
                            Add Item
              </Button>
              <ControlLabel
                            bsClass="control-label"
                            srOnly={false}
              >
                            Scan code
              </ControlLabel>
              <FormControl
                            bsClass="form-control"
                            className="input-scan-code"
                            componentClass="input"
                            onChange={[Function]}
              />
</FormGroup>,
            "componentClass": "form",
            "horizontal": false,
            "inline": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "form-group",
              "children": Array [
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="default"
                  className="btn-add"
                  disabled={false}
                  onClick={[Function]}
>
                  Add Item
</Button>,
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
>
                  Scan code
</ControlLabel>,
                <FormControl
                  bsClass="form-control"
                  className="input-scan-code"
                  componentClass="input"
                  onChange={[Function]}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "active": false,
                  "block": false,
                  "bsClass": "btn",
                  "bsStyle": "default",
                  "children": "Add Item",
                  "className": "btn-add",
                  "disabled": false,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Add Item",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "control-label",
                  "children": "Scan code",
                  "srOnly": false,
                },
                "ref": null,
                "rendered": "Scan code",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-control",
                  "className": "input-scan-code",
                  "componentClass": "input",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "disableLifecycleMethods": true,
    "hydrateIn": undefined,
  },
}
`;
